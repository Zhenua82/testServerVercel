// import formidable from 'formidable';
// import fs from 'fs';

// export const config = {
//   api: {
//     bodyParser: false,
//   },
// };

// export default async function handler(req, res) {
//   // CORS-–∑–∞–≥–æ–ª–æ–≤–∫–∏
//   res.setHeader('Access-Control-Allow-Origin', '*');
//   res.setHeader('Access-Control-Allow-Methods', 'POST, OPTIONS');
//   res.setHeader('Access-Control-Allow-Headers', 'Content-Type');

//   // –û–±—Ä–∞–±–æ—Ç–∫–∞ preflight-–∑–∞–ø—Ä–æ—Å–æ–≤
//   if (req.method === 'OPTIONS') {
//     res.status(200).end();
//     return;
//   }

//   if (req.method === 'POST') {
//     const form = formidable({ multiples: true });

//     try {
//       form.parse(req, (err, fields, files) => {
//         if (err) {
//           console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–±–æ—Ä–µ —Ñ–æ—Ä–º—ã:', err);
//           res.status(500).json({ error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–±–æ—Ä–µ —Ñ–æ—Ä–º—ã' });
//           return;
//         }

//         const file = files?.file;
//         if (!file || !file[0]) {
//           res.status(400).json({ error: '–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω' });
//           return;
//         }

//         const uploadedFile = file[0];
//         const data = fs.readFileSync(uploadedFile.filepath, 'utf-8');

//         // –ü—Ä–∏–º–µ—Ä: —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞–∫ result.txt
//         fs.writeFileSync('result.txt', data);

//         res.status(200).json({ message: '–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω!' });
//       });
//     } catch (error) {
//       console.error('–û—à–∏–±–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ:', error);
//       res.status(500).json({ error: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' });
//     }
//   } else {
//     res.status(405).json({ error: '–ú–µ—Ç–æ–¥ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è' });
//   }
// }

// pages/api/bdPost.js

import formidable from 'formidable';
import fs from 'fs';
import path from 'path';

export const config = {
  api: {
    bodyParser: false,
  },
};

export default async function handler(req, res) {
  // CORS-–∑–∞–≥–æ–ª–æ–≤–∫–∏
  res.setHeader('Access-Control-Allow-Origin', '*');
  res.setHeader('Access-Control-Allow-Methods', 'POST, OPTIONS');
  res.setHeader('Access-Control-Allow-Headers', 'Content-Type');

  // if (req.method === 'OPTIONS') {
  //   // –ü—Ä–µ–¥–∑–∞–ø—Ä–æ—Å CORS
  //   return res.status(200).end();
  // }
  
  if (req.method === 'OPTIONS') {
    res.status(200).end();
    return;
  }

  if (req.method !== 'POST') {
    return res.status(405).json({ error: '–ú–µ—Ç–æ–¥ –Ω–µ —Ä–∞–∑—Ä–µ—à—ë–Ω' });
  }

  // –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –∑–∞–≥—Ä—É–∑–æ–∫, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
  const uploadDir = path.join(process.cwd(), 'public', 'uploads');
  if (!fs.existsSync(uploadDir)) {
    fs.mkdirSync(uploadDir, { recursive: true });
  }

  const form = formidable({
    multiples: true,
    uploadDir: uploadDir,
    keepExtensions: true,
  });

  form.parse(req, async (err, fields, files) => {
    if (err) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ —Ñ–æ—Ä–º—ã:', err);
      return res.status(500).json({ error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã' });
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ñ–∞–π–ª–∞ photo
    const photo = files.photo;
    const portfolio = files.portfolio;

    if (!photo && !portfolio) {
      return res.status(400).json({ error: '–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω' });
    }

    // –í—ã–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å ‚Äî –º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å—é –≤ –ë–î
    console.log('‚úÖ –ü–æ–ª—É—á–µ–Ω—ã –ø–æ–ª—è:', fields);
    console.log('üì∑ –ü–æ–ª—É—á–µ–Ω—ã —Ñ–∞–π–ª—ã:', {
      photo: photo?.originalFilename || photo?.filepath,
      portfolio: Array.isArray(portfolio)
        ? portfolio.map(f => f.originalFilename || f.filepath)
        : portfolio?.originalFilename || portfolio?.filepath,
    });

    return res.status(200).json({ success: true, message: '–§–æ—Ä–º–∞ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞!' });
  });
}
